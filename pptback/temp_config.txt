<!doctype html>
<html>

<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
	<title>###TITLE###</title>
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/reveal.js@3.7.0/css/reveal.css">
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/reveal.js@3.7.0/css/theme/league.css">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.1/styles/zenburn.min.css">
</head>

<body>
  <div class="reveal">
    <div class="slides">
    ###CONTENT###
    </div>
  </div>

	<script src="https://cdn.jsdelivr.net/npm/headjs@1.0.3/dist/1.0.0/head.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/reveal.js@3.7.0/js/reveal.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"
		integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g=="
		crossorigin="anonymous" referrerpolicy="no-referrer"></script>
	<script>

		Reveal.initialize({
			// Display controls in the bottom right corner
			controls: true,

			width: '100%',
			height: '100%',
		});
		window.onresize = () => {
			try {
				$('img[class*="ppt-stretch"]').each(function () {
					formatImg($(this), Number($(this).data("w")), Number($(this).data("h")))
				})
			} catch (err) {
				console.log(err)
			}
		}
		window.onload = () => {
			try {
				$('img[class*="ppt-stretch"]').each(function () {
					formatImg($(this), Number($(this).data("w")), Number($(this).data("h")))
				})
			} catch (err) {
				console.log(err)
			}
		}

		function formatImg(el, originalWidth, originalHeight) {
			const width = $('.slides').innerWidth()
			const height = $('.slides').height()
			const mrtop = parseInt($('.slides').css("marginTop"))
			const mrbottom = parseInt($('.slides').css("marginBottom"))
			const ptop = parseInt($('.present').css('top'))
			console.log('width--', width, height, mrtop, mrbottom)
			const [nw, nh] = scaleImage(originalWidth, originalHeight, width, height - mrtop - mrbottom - 70 - ptop)
			console.log('width--', nw, nh)
			el.css({ width: nw, height: nh })
		}

		function scaleImage(originalWidth, originalHeight, targetWidth, targetHeight) {
			// if (originalWidth < targetWidth && originalHeight < targetHeight) {
			// 	return [originalWidth, originalHeight, 1];
			// }
			// 计算宽度和高度的缩放比例
			const widthScale = targetWidth / originalWidth;
			const heightScale = targetHeight / originalHeight;

			// 选择较小的缩放比例，以保持宽高比不变
			let scale = Math.min(widthScale, heightScale);
			// 计算新的宽度和高度
			let newWidth = originalWidth * scale;
			let newHeight = originalHeight * scale;

			return [newWidth, newHeight, scale];
		}
	</script>
</body>

</html>